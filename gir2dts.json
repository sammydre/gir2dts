{
    "module": {
        "Atk": {
            "source": "/usr/share/gir-1.0/Atk-1.0.gir",
            "output": "src/Atk.d.ts",
            "import": ["GObject", "GLib"]
        },
        "Gda": {
            "source": "/usr/share/gir-1.0/Gda-5.0.gir",
            "output": "src/Gda.d.ts",
            "import": ["GObject", "GLib"],
            "patch": {
                "Connection": {
                    "statement_execute_non_select": "statement_execute_non_select(stmt: Statement, params: Set, last_insert_row?: Set):number"
                }
            }

        },
        "Gio": {
            "source": "/usr/share/gir-1.0/Gio-2.0.gir",
            "output": "src/Gio.d.ts",
            "import": ["GObject", "GLib"],
            "patch": {
                "IOModule": {
                    "load": "/* load */"
                }
            }
        },
        "GLib": {
            "source": "/usr/share/gir-1.0/GLib-2.0.gir",
            "output": "src/GLib.d.ts",
            "add": {
                "Application": {
                    "run": "run(argv: any)"
                }
            }
        },
        "GObject": {
            "source": "/usr/share/gir-1.0/GObject-2.0.gir",
            "output": "src/GObject.d.ts",
            "patch": "patches/gobject.d.ts",
            "import": ["GLib"],
            "add": {
                "Object": {
                    "connect": "connect(...args: any[]):any",
                    "get_valist": "get_valist(...args: any[]):void",
                    "get_property": "get_property(...args: any[]):any",
                    "newv": "static newv(...args: any[]):Object",
                    "replace_data": "replace_data(...args: any[]):any",
                    "set_property": "set_property(...args: any[]):void",
                    "set_valist": "set_valist(...args: any[]):void"
                }
            }
        },
        
        "GtkSource": {
            "source": "/usr/share/gir-1.0/GtkSource-3.0.gir",
            "output": "src/GtkSource.d.ts",
            "import": ["GObject", "Gio", "Gdk", "Gtk", "GLib", "Pango"],
            "patch": {
                "Buffer": {
                    "can-redo": "/* can-redo */",
                    "can-undo": "/* can-undo */"
                }
            }
        },
        "Gtk": {
            "source": "/usr/share/gir-1.0/Gtk-3.0.gir",
            "output": "src/Gtk.d.ts",
            "import": ["GObject", "GLib", "Gio", "Gdk", "Atk","Pango"],
            "patch" : {
                "AppChooserWidget": {
                    "show-all": "/* show-all */"
                },
                "MountOperation": {
                    "is-showing": "/* is-showing */"
                },
                "SeparatorToolItem": {
                    "draw": "/* draw */"
                },
                "CheckButton": {
                    "draw_indicator": "/* draw_indicator */"
                },
                "HandleBox": {
                    "child-detached": "/* child-detached */"
                },
                "Plug": {
                    "embedded": "/* embedded */"
                },
                "Scale": {
                    "draw-value": "/* draw-value */"
                },

                "Bin": {
                    "mnemonic_activate": "mnemonic_activate(...args: any[]):boolean"
                },
                "Container": {
                    "remove" : "remove(...args: any[]):void",
                    "child_notify": "child_notify(...args: any[]):void"
                },
                "CheckMenuItem": {
                    "new_with_label": "static new_with_label(...args: any[]):CheckMenuItem"
                },
                "ComboBoxText": {
                    "remove" : "remove(...args: any[]):void"
                },
                "CssProvider": {
                    "load_from_data": "load_from_data(...args:any[]):boolean"
                },
                "LinkButton": {
                    "new_with_label": "static new_with_label(...args: any[]):LinkButton"
                },
                "ListStore": {
                    "append": "append():any",
                    "newv": "static newv(...args: any[]):ListStore",
                    "set_column_types": "set_column_types(types: number[]):void",
                    "set_valist": ""
                },
                "MenuButton": {
                    "get_direction": "get_direction(): number",
                    "set_direction": "set_direction(dir: number):void"
                },
                "MenuItem": {
                    "activate": "activate():any"
                },
                "RadioButton": {
                    "new_with_label": "static new_with_label(...args: any[]):RadioButton",
                    "new_with_mnemonic": "static new_with_mnemonic(...args: any[]):RadioButton"
                },
                "RadioMenuItem": {
                    "new_with_label": "static new_with_label(...args: any[]):RadioMenuItem",
                    "new_with_mnemonic": "static new_with_mnemonic(...args: any[]):RadioMenuItem"
                },
                "RadioToolButton": {
                    "new_with_label": "static new_with_label(...args: any[]):RadioToolButton",
                    "new_from_stock": "static new_from_stock(...args: any[]):RadioToolButton"
                },
                "Statusbar": {
                    "remove" : "remove(...args: any[]):void"
                },
                "Style": {
                    "get_valist": "get_valist(...args: any[]):void"
                },
                "StyleContext": {
                    "get_property": "get_property(...args: any[]):any",
                    "get_valist": "get_valist(...args: any[]):void"
                },
                "StyleProperties": {
                    "get_property": "get_property(...args: any[]):any",
                    "get_valist": "get_valist(...args: any[]):void",
                    "set_property": "set_property(...args: any[]):void",
                    "set_valist": "set_valist(...args: any[]):void"
                },
                "Switch": {
                    "get_state": "get_state():number",
                    "set_state": "set_state(state: number)"
                },
                "TextView": {
                    "get_window": "get_window(win?: number):Gdk.Window"
                },
                "TreeSelection": {
                    "get_selected": "get_selected():any"
                },
                "TreeStore": {
                    "newv": "static newv(...args: any[]):TreeStore"
                },
                "ThemingEngine": {
                    "get_property": "get_property(...args: any[]):any",
                    "get_valist": "get_valist(...args: any[]):void"
                },
                "ToggleButton": {
                    "get_direction": "get_direction(): number",
                    "set_direction": "set_direction(dir: number):void"
                },
                "ToggleToolButton": {
                    "new_from_stock": "static new_from_stock(...args: any[]):ToggleToolButton"
                },
                "Toolbar": {
                    "get_style": "get_style():number",
                    "set_style": "set_style(style: number)"
                },
                "ToolPalette": {
                    "get_style": "get_style():number",
                    "set_style": "set_style(style: number)"
                },
                "Widget": {
                    "activate": "activate():any",
                    "child_notify": "child_notify(...args: any[]):void",
                    "get_state": "get_state():number",
                    "get_settings": "get_settings():any",
                    "get_style": "get_style():number",
                    "get_window": "get_window(win?: number):Gdk.Window",
                    "get_direction": "get_direction(): number",
                    "set_direction": "set_direction(dir: number):void",
                    "set_state": "set_state(state: number)",
                    "set_style": "set_style(style: number)",

                    "has-default": "/* has-default */",
                    "has-focus": "/* has-focus */",
                    "is-focus": "/* is-focus */"
                },
                "Window": {
                    "mnemonic_activate": "mnemonic_activate(...args: any[]):boolean",

                    "has-toplevel-focus": "/* has-toplevel-focus */",
                    "is-active": "/* is-active */",
                    "is-maximized": "/* is-maximized */"
                }
            }
        },
        "Gdk": {
            "source": "/usr/share/gir-1.0/Gdk-3.0.gir",
            "output": "src/Gdk.d.ts",
            "import": ["GObject", "Gio", "Pango", "GLib"]
        },
        "Pango": {
            "source": "/usr/share/gir-1.0/Pango-1.0.gir",
            "output": "src/Pango.d.ts",
            "import": ["GObject","GLib"]
        },
        "Soup": {
            "source": "/usr/share/gir-1.0/Soup-2.4.gir",
            "output": "src/Soup.d.ts",
            "import": ["GObject", "Gio", "GLib"],
            "patch": {
                "Auth": {
                    "is-authenticated": "/* is-authenticated */",
                    "is-for-proxy": "/* is-for-proxy */"
                },
                "AuthDomain": {
                    "add-path": "/* add-path */",
                    "remove-path": "/* remove-path */"
                }
            }
        },
        "WebKit": {
            "source": "/usr/share/gir-1.0/WebKit-3.0.gir",
            "output": "src/WebKit.d.ts",
            "import": ["GObject", "Gio", "Gtk", "Soup", "GLib", "Gdk"],
            "patch": {
                "DOMCharacterData": {
                    "replace_data": "replace_data(...args: any[]):any"
                },
                "DOMCSSStyleDeclaration": {
                    "set_property": "set_property(...args: any[]):void"
                },
                "DOMElement": {
                    "remove": "remove(index?: number):void"
                },
                "DOMHTMLSelectElement": {
                    "remove": "remove(index?: number):void"
                },
                "DOMObject": {
                    "set_property": "set_property(...args: any[]):void"
                },
                "WebView": {
                    "get_settings": "get_settings():any"
                }

            }
        }
    }
}
